<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.misonamoo.niaportal.mapper.DwReqMapper">

	<!-- 다운로드 -->
	<insert id="dwInsert" parameterType="DwBase">
		INSERT INTO AI_DW_BASE (
			DW_NO,
			USER_NO,
			FILE_NO,
			SPORTS_GB_CODE,
			FILE_URL,
			FILE_NAME,
			REG_DATE)
		VALUES (
			ai_get_seq('dwNo'),
			#{userNo},
			#{fileNo},
			#{sportsGbCode},
			#{fileUrl},
			#{fileName},
			NOW()
		)
	</insert>

	<!-- 다운로드 목록 조회 -->
	<select id="dwList" parameterType="DwBase" resultType="HashMap">
		SELECT
			DW_NO as dwNo,
			SPORTS_GB_CODE as sportGbCode,
			FILE_NO as fileNo,
			FILE_URL as fileUrl,
			FILE_NAME as fileName,
			REG_DATE as regDate
		FROM AI_DW_BASE
		WHERE USER_NO = #{userNo}
		ORDER BY REG_DATE DESC
		LIMIT #{pagePerRow} offset #{startRow}
			;
	</select>

	<!-- 다운로드 요청 상세 정보 조회 -->
	<select id="getDwBaseTotalCnt" parameterType="DwBase" resultType="int">
		SELECT
			COUNT(*)
		FROM AI_DW_BASE
		WHERE USER_NO = #{userNo}
		;
	</select>

	<!-- 동일한 회원이 이미 받은 파일 다운로드 요청 수 반환 -->
	<select id="dupFileNo" parameterType="DwBase" resultType="int">
		SELECT count(*)
		FROM AI_DW_BASE
		WHERE USER_NO = #{userNo} AND FILE_NO = #{fileNo};
	</select>

	<!-- 다운로드 요청 상세 정보 조회 -->
	<select id="getDwReqInfo" parameterType="DwReq" resultType="DwReq">
		SELECT
		    B.USER_NO as userNo,
			B.EMAIL as email,
			B.USER_NAME as userName,
			B.TEL as tel,
			B.AGENCY as agency,
			B.COMPANY_TYPE_CODE as companyTypeCode,
			(SELECT CODE_NAME FROM AI_COMMONCODE WHERE CODE = B.COMPANY_TYPE_CODE) AS companyTypeName ,
			A.REQ_CODE as reqCode,
			(SELECT CODE_NAME FROM AI_COMMONCODE WHERE CODE = A.REQ_CODE) AS reqName,
		    A.REQ_COMMENT as reqComment,
		    A.CONFIRM_STATE_CODE as confirmStateCode,
			(SELECT CODE_NAME FROM AI_COMMONCODE WHERE CODE = A.CONFIRM_STATE_CODE) AS confirmStateName,
			A.CONFIRM_MESSAGE as confirmMessage,
			A.REG_DATE as regDate,
		    A.CONFIRM_DATE as confirmDate
		FROM "".AI_DW_REQ A inner join AI_USER B ON A.USER_NO = B.USER_NO where A.USER_NO=#{userNo};
	</select>

	<!-- 다운로드 요청 등록 / 수정-->
	<insert id="insertReq" parameterType="DwReq">
		INSERT INTO "".AI_DW_REQ (
			USER_NO,
			REQ_CODE,
			REQ_COMMENT,
			CONFIRM_STATE_CODE,
			REG_DATE,
			UPD_DATE)
		VALUES (
			   #{userNo},
			   #{reqCode},
			   #{reqComment},
		    	#{confirmStateCode},
			   NOW(),
			   NOW()
		)ON DUPLICATE KEY UPDATE

			<if test='confirmStateCode != null and confirmStateCode != "null" and confirmStateCode != ""'>
				CONFIRM_STATE_CODE = #{confirmStateCode},
			</if>
			<if test='confirmMessage != null and confirmMessage != "null" and confirmMessage != ""'>
				CONFIRM_MESSAGE= #{confirmMessage},
			</if>
			UPD_DATE = NOW();
		;
	</insert>

	<!-- 다운로드 요청 상세 정보 조회 -->
	<select id="listDwReqInfo" parameterType="DwReq" resultType="HashMap">
		SELECT
			B.USER_NO as userNo,
			B.EMAIL as email,
			B.USER_NAME as userName,
			B.TEL as tel,
			B.AGENCY as agency,
			B.COMPANY_TYPE_CODE as companyTypeCode,
			(SELECT CODE_NAME FROM AI_COMMONCODE WHERE CODE = B.COMPANY_TYPE_CODE) AS companyTypeName ,
			A.REQ_CODE as reqCode,
			(SELECT CODE_NAME FROM AI_COMMONCODE WHERE CODE = A.REQ_CODE) AS reqName,
			A.REQ_COMMENT as reqComment,
			A.CONFIRM_STATE_CODE as confirmStateCode,
			(SELECT CODE_NAME FROM AI_COMMONCODE WHERE CODE = A.CONFIRM_STATE_CODE) AS confirmStateName,
			A.CONFIRM_MESSAGE as confirmMessage,
			A.REG_DATE as regDate,
			A.CONFIRM_DATE as confirmDate
		FROM "".AI_DW_REQ A inner join AI_USER B ON A.USER_NO = B.USER_NO
		ORDER BY A.REG_DATE DESC
		LIMIT #{pagePerRow} offset #{startRow}
			;
	</select>

	<!-- 다운로드 요청 상세 정보 조회 -->
	<select id="getDwReqTotalCnt" parameterType="DwReq" resultType="int">
		SELECT
			COUNt(*)
		FROM "".AI_DW_REQ A inner join AI_USER B ON A.USER_NO = B.USER_NO
		;
	</select>

</mapper>


